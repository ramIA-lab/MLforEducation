---
title: "Preparación de los datos para el modelado"
author: Dante Conti, Sergi Ramirez, (c) IDEAI
date: "`r Sys.Date()`"
date-modified: "`r Sys.Date()`"
toc: true
# language: es
number-sections: true
format: 
  html: 
    theme: cerulean
editor: visual
#execute: 
#  freeze: auto
---

# Descripción del problema

The dataset contains historical Steam sales data, updated weekly.

Columns include:

-   **Game Name**: Title of the game on Steam
-   **Rating**: Average Steam user rating (out of 10)
-   **#Reviews**: Total number of reviews submitted by users
-   **Discount %**: Current discount percentage applied to the game
-   **Price (€)**: Current discounted price in euros
-   **Original Price (€)**: Original price in euros before discount
-   **Release Date**: Official release date of the game
-   **Windows**: 1 if available on Windows, 0 otherwise
-   **Linux**: 1 if available on Linux, 0 otherwise
-   **MacOS**: 1 if available on macOS, 0 otherwise
-   **Fetched At**: Timestamp of when the data was collected

```{r}
#| label: lectura-datos
#| echo: false
#| warning: false
#| message: false
#| error: false

# Lectura de los datos
path <- "E:/TRABAJO/DOCENCIA/MATERIAL DOCENTE/material/"
datos <- read.csv(paste0(path, "BankChurners.csv"))
head(datos)

```

A continuación vamos a detectar de que clase es cada u

```{r}
#| label: tipo-variables
#| echo: true
#| warning: false
#| message: false
#| error: false

clases <- sapply(datos, class)
varNum <- names(clases)[which(clases %in% c("numeric", "integer"))]
varCat <- names(clases)[which(clases %in% c("character", "factor"))]
```

# Data describe

![](DescriptiveAnalysis.png)

## Univariant analysis

### Numerical

#### Description

```{r}
library(psych)
psych::describe(datos)
```

#### Graphic

::: panel-tabset
## base

```{r}
for (var in varNum) {
  hist(datos[, var], main = paste0("Histograma variable ", var))
  boxplot(datos[, var], main = paste0("Boxplot variable ", var))
}
```

## ggplot2

```{r}

library(ggplot2)

for (var in varNum) {
  
  # Histograma
  grafico <- ggplot(datos, aes(x = get(var))) + 
    geom_histogram(aes(y = ..density..), colour = "black", fill = "white")+
    geom_density(alpha=.2, fill="#FF6666")  + 
    geom_vline(aes(xintercept = mean(get(var))),
            color="blue", linetype = "dashed", linewidth = 1)
  print(grafico)
  
  # Boxplot
  
  grafico2 <- ggplot(datos, aes(x=get(var))) + 
    geom_boxplot(outlier.colour="red", outlier.shape=8,
                outlier.size=4)
  print(grafico2)
  
}
```
:::

### Categorical

#### Description

```{r}
for (var in varCat) {
  tablaAbs <- data.frame(table(datos[, var]))
  tablaFreq <- data.frame(table(datos[, var])/sum(table(datos[, var])))
  m <- match(tablaAbs$Var1, tablaFreq$Var1)
  tablaAbs[, "FreqRel"] <- tablaFreq[m, "Freq"]
  colnames(tablaAbs) <- c("Categoria", "FreqAbs", "FreqRel")
  
  cat("===============", var, "===================================\n")
  print(tablaAbs)
  cat("==================================================\n")
}
```

#### Graphic

::: panel-tabset
## base

```{r}
for (var in varCat) {
  barplot(table(datos[, var]))
}
```

## ggplot2

```{r}
for (var in varCat) {
  
  tabla <- data.frame(table(datos[, var])/sum(table(datos[, var])))
  p <- ggplot(data = tabla, aes(x = Var1, y = Freq)) +
        geom_bar(stat = "identity", fill = "steelblue")+
        geom_text(aes(label=paste0(round(Freq, 2)*100, "%")), vjust=1.6, color="white", size=3.5)+
        theme_minimal()
  
  print(p)
}
```
:::

## Bivariant analysis

### Numerical vs. numerical

#### Description

```{r}
cor(datos[, varNum])
```

#### Graphic

::: panel-tabset
## base

```{r}
library(PerformanceAnalytics)
chart.Correlation(as.matrix(datos[, varNum]),histogram = TRUE,pch=12)
```

## ggplot2

```{r}
library(ggcorrplot)
corr <- round(cor(datos[, varNum]), 1)
ggcorrplot(corr, lab = T)
```
:::

### Numerical vs. categorical

#### Description

```{r}
for (var in varNum) {
print(psych::describeBy(datos[, var], group = datos$MacOS))
}

```

#### Graphic

```{r}
for (varC in varCat) {
  for (varN in varNum) {
    # Histogram by group in ggplot2
  grafico <- ggplot(datos, aes(x = get(varN), fill = get(varC))) + 
    geom_histogram(colour = "black",
                   lwd = 0.75,
                   linetype = 1,
                   position = "identity")
  print(grafico)
  }
}
```

### Categorical vs. categorical

#### Description

```{r}
for (varc1 in varCat) {
  for (varc2 in varCat) {
    if (varc1 != varc2) {
      prop_table <- prop.table(table(datos[, varc1], datos[, varc2]))
      cat("=============", varc1, " vs. ", varc2, "=========================\n")
      print(prop_table)
    }
  }
}
```

#### Graphic

```{r}

for (varc1 in varCat) {
  for (varc2 in varCat) {
    if (varc1 != varc2) {
      prop_table <- prop.table(table(datos[, varc1], datos[, varc2]))
      barplot(prop_table, beside = TRUE)
    }
  }
}


```

# Preprocessing: Data cleaning

## Features selection

## Outiliers

## Imputation

## New Variables
