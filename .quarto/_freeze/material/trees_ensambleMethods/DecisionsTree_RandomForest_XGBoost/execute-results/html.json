{
  "hash": "51db62338a47c6213e9c4f21d48ac44a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Árboles de Decisión, Random Forest y XGBoost\"\nauthor: Dante Conti, Sergi Ramirez, (c) IDEAI\ndate: \"2024-12-07\"\ndate-modified: \"2024-12-07\"\ntoc: true\n# language: es\nnumber-sections: true\nformat: \n  html: \n    theme: cerulean\neditor: visual\n#execute: \n#  freeze: auto\n---\n\n\n\n\n\n# Descripción del problema\n\nEn este ejemplo se entrena un árbol de regresión para predecir el precio unitario de la vivienda en Madrid. Para ello se utilizan los datos de viviendas a la venta en Madrid publicados en Idealista durante el año 2018. Estos datos están incluidos en el paquete `idealista18`. Las variables que contienen nuestra base de datos son las siguientes:\n\n-   ***\"ASSETID\" :*** Identificador único del activo\n\n-   ***\"PERIOD\" :*** Fecha AAAAMM, indica el trimestre en el que se extrajo el anuncio, utilizamos AAAA03 para el 1.er trimestre, AAAA06 para el 2.º, AAAA09 para el 3.er y AAAA12 para el 4.º\n\n-   ***\"PRICE\" :*** Precio de venta del anuncio en idealista expresado en euros\n\n-   ***\"UNITPRICE\" :*** Precio en euros por metro cuadrado\n\n-   ***\"CONSTRUCTEDAREA\" :*** Superficie construida de la casa en metros cuadrados\n\n-   ***\"ROOMNUMBER\" :*** Número de habitaciones\n\n-   ***\"BATHNUMBER\" :*** Número de baños\n\n-   ***\"HASTERRACE\" :*** Variable ficticia para terraza (toma 1 si hay una terraza, 0 en caso contrario)\n\n-   ***\"HASLIFT\" :*** Variable ficticia para ascensor (toma 1 si hay ascensor en el edificio, 0 en caso contrario)\n\n-   ***\"HASAIRCONDITIONING\" :*** Variable ficticia para Aire Acondicionado (toma 1 si hay una Aire Acondicionado, 0 en caso contrario)\n\n-   ***\"AMENITYID\" :*** Indica las comodidades incluidas (1 - sin muebles, sin comodidades de cocina, 2 - comodidades de cocina, sin muebles, 3 - comodidades de cocina, muebles)\n\n-   ***\"HASPARKINGSPACE\" :*** Variable ficticia para estacionamiento (toma 1 si el estacionamiento está incluido en el anuncio, 0 en caso contrario)\n\n-   ***\"ISPARKINGSPACEINCLUDEDINPRICE\" :*** Variable ficticia para estacionamiento (toma 1 si el estacionamiento está incluido en el anuncio, 0 en caso contrario)\n\n-   ***\"PARKINGSPACEPRICE\" :*** Precio de plaza de parking en euros\n\n-   ***\"HASNORTHORIENTATION\" :*** Variable ficticia para orientación (toma 1 si la orientación es Norte en el anuncio, 0 en caso contrario) - *Nota importante: las características de orientación no son características ortogonales, una casa orientada al norte también puede estar orientada al este*\n\n-   ***\"HASSOUTHORIENTATION\" :*** Variable ficticia para orientación (toma 1 si la orientación es Sur en el anuncio, 0 en caso contrario) - *Nota importante: las características de orientación no son características ortogonales, una casa orientada al norte también puede estar orientada al este*\n\n-   ***\"HASEASTORIENTATION\" :*** Variable ficticia para orientación (toma 1 si la orientación es Este en el anuncio, 0 en caso contrario) - *Nota importante: las características de orientación no son características ortogonales, una casa orientada al norte también puede estar orientada al este*\n\n-   ***\"HASWESTORIENTATION\" :*** Variable ficticia para orientación (toma 1 si la orientación es Oeste en el anuncio, 0 en caso contrario) - *Nota importante: las características de orientación no son características ortogonales, una casa orientada al norte también puede estar orientada al este*\n\n-   ***\"HASBOXROOM\" :*** Variable ficticia para boxroom (toma 1 si boxroom está incluido en el anuncio, 0 en caso contrario)\n\n-   ***\"HASWARDROBE\" :*** Variable ficticia para vestuario (toma 1 si el vestuario está incluido en el anuncio, 0 en caso contrario)\n\n-   ***\"HASSWIMMINGPOOL\" :*** Variable ficticia para piscina (toma 1 si la piscina está incluida en el anuncio, 0 en caso contrario)\n\n-   ***\"HASDOORMAN\" :*** Variable ficticia para portero (toma 1 si hay un portero en el edificio, 0 en caso contrario)\n\n-   ***\"HASGARDEN\" :*** Variable ficticia para jardín (toma 1 si hay un jardín en el edificio, 0 en caso contrario)\n\n-   ***\"ISDUPLEX\" :*** Variable ficticia para dúplex (toma 1 si es un dúplex, 0 en caso contrario)\n\n-   ***\"ISSTUDIO\" :*** Variable ficticia para piso de soltero (estudio en español) (toma 1 si es un piso para una sola persona, 0 en caso contrario)\n\n-   ***\"ISINTOPFLOOR\" :*** Variable ficticia que indica si el apartamento está ubicado en el piso superior (toma 1 en el piso superior, 0 en caso contrario)\n\n-   ***\"CONSTRUCTIONYEAR\" :*** Año de construcción (fuente: anunciante)\n\n-   ***\"FLOORCLEAN\" :*** Indica el número de piso del apartamento comenzando desde el valor 0 para la planta baja (fuente: anunciante)\n\n-   ***\"FLATLOCATIONID\" :*** Indica el tipo de vistas que tiene el piso (1 - exterior, 2 - interior)\n\n-   ***\"CADCONSTRUCTIONYEAR\" :*** Año de construcción según fuente catastral (fuente: catastro), tenga en cuenta que esta cifra puede diferir de la proporcionada por el anunciante\n\n-   ***\"CADMAXBUILDINGFLOOR\" :*** Superficie máxima del edificio (fuente: catastro)\n\n-   ***\"CADDWELLINGCOUNT\" :*** Recuento de viviendas en el edificio (fuente: catastro)\n\n-   ***\"CADASTRALQUALITYID\" :*** Calidad catastral (fuente: catastro)\n\n-   ***\"BUILTTYPEID_1\" :*** Valor ficticio para estado del piso: 1 obra nueva 0 en caso contrario (fuente: anunciante)\n\n-   ***\"BUILTTYPEID_2\" :*** Valor ficticio para condición plana: 1 segundero a restaurar 0 en caso contrario (fuente: anunciante)\n\n-   ***\"BUILTTYPEID_3\" :*** Valor ficticio para estado plano: 1 de segunda mano en buen estado 0 en caso contrario (fuente: anunciante)\n\n-   ***\"DISTANCE_TO_CITY_CENTER\" :*** Distancia al centro de la ciudad en km\n\n-   ***\"DISTANCE_TO_METRO\" :*** Distancia istancia a una parada de metro en km.\n\n-   ***\"DISTANCE_TO_DIAGONAL\" :*** Distancia a la Avenida Diagonal en km; Diagonal es una calle principal que corta la ciudad en diagonal a la cuadrícula de calles.\n\n-   ***\"LONGITUDE\" :*** Longitud del activo\n\n-   ***\"LATITUDE\" :*** Latitud del activo\n\n-   ***\"geometry\" :*** Geometría de características simples en latitud y longitud.\n\n**Fuente**: [Idealista](https://www.idealista.com/)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"idealista18\")\nBCN <- get(data(\"Barcelona_Sale\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtramos la epoca a Navidad\nBCN <- BCN[which(BCN$PERIOD == \"201812\"), ]\n\npisos_sf_BCN <- st_as_sf(BCN, coords = c(\"LONGITUDE\", \"LATITUDE\"), crs = 4326)\n\n# Leer shapefile de secciones censales\nsecciones <- st_read(\"C:/Users/sergi/Downloads/Shapefile/seccionado_2024/SECC_CE_20240101.shp\")\n\n# Transformar pisos al sistema de referencia de las secciones censales\npisos_sf_BCN <- st_transform(pisos_sf_BCN, crs = st_crs(secciones))\n\n# Hacer el match entre pisos y secciones censales\npisos_con_seccion <- st_join(pisos_sf_BCN, secciones, join = st_within)\n\n# Convertir a dataframe para exportar\nBCN <- as.data.frame(pisos_con_seccion)\n\nrm(Barcelona_Sale, Barcelona_Polygons, Barcelona_POIS, pisos_con_seccion, pisos_sf_BCN, secciones); gc()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrentaMedia <- read.csv(\"https://raw.githubusercontent.com/miguel-angel-monjas/spain-datasets/refs/heads/master/data/Renta%20media%20en%20Espa%C3%B1a.csv\")\n# NOs quedamos con los datos que nos interesa de Barcelona\nrentaMedia <- rentaMedia[which(rentaMedia$Provincia == \"Barcelona\" & rentaMedia$Tipo.de.elemento == \"sección\"), ]\nrentaMedia$Código.de.territorio <- paste0(\"0\", rentaMedia$Código.de.territorio)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncols <- c(\"Renta.media.por.persona\", \"Renta.media.por.hogar\")\n\nm <- match(BCN$CUSEC, rentaMedia$Código.de.territorio)\nBCN[, cols] <- rentaMedia[m, cols]\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n# Preprocessing de los datos\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBCN <- BCN %>%\n  select(-X, -PRICE, -LONGITUDE, -LATITUDE, -geometry, -CONSTRUCTIONYEAR, \n         -ASSETID, -PERIOD, -CUSEC, -CSEC, -CMUN, -CPRO, -CCA, -CUDIS, -CLAU2, \n         -NPRO, -NCA, -CNUT0, -CNUT1, -CNUT2, -CNUT3, -NMUN, -Shape_Leng,\n         -Shape_Area, -geometry, -CUMUN, -CADASTRALQUALITYID) %>%\n  mutate(\n    across(\n      .cols = starts_with(c(\"HAS\", \"IS\")),\n      .fns = ~ case_when(. == 0 ~ \"No\", . == 1 ~ \"Si\"),\n      .names = \"{.col}\"), \n    AMENITYID = case_when(\n      AMENITYID == 1 ~ \"SinMuebleSinCocina\", AMENITYID == 2 ~ \"CocinaSinMuebles\", \n      AMENITYID == 3 ~ \"CocinaMuebles\"), \n    FLATLOCATIONID = case_when(\n      FLATLOCATIONID == 1 ~ \"exterior\", FLATLOCATIONID == 2 ~ \"interior\", \n      .default = \"noInfo\"),\n    BUILTTYPEID_1 = case_when(\n      BUILTTYPEID_1 == 0 ~ \"noObraNueva\", BUILTTYPEID_1 == 1 ~ \"obraNueva\"),\n    BUILTTYPEID_2 = case_when(\n      BUILTTYPEID_2 == 0 ~ \"noRestaurar\", BUILTTYPEID_2 == 1 ~ \"Restaurar\"),\n    BUILTTYPEID_3 = case_when(\n      BUILTTYPEID_3 == 0 ~ \"noSegundaMano\", BUILTTYPEID_3 == 1 ~ \"SegundaMano\"),\n    FLOORCLEAN = replace_na(FLOORCLEAN, 0),\n    CDIS = case_when(\n      CDIS == 1 ~ \"Ciutat-Vella\", CDIS == 2 ~ \"Eixample\", CDIS == 3 ~ \"Sants-Montjuic\", \n      CDIS == 4 ~ \"Les Corts\", CDIS == 5 ~ \"Sarrià-Sant Gervasi\", \n      CDIS == 6 ~ \"Gràcia\", CDIS == 7 ~ \"Horta-Guinardó\", CDIS == 8 ~ \"Nou Barris\",\n      CDIS == 9 ~ \"Sant Andreu\", CDIS == 10 ~ \"Sant Martí\"),\n    RENTA = case_when(\n     Renta.media.por.hogar < 30000 ~ \"Baja\",\n     Renta.media.por.hogar >= 30000 & Renta.media.por.hogar <= 50000 ~ \"Media\",\n     Renta.media.por.hogar > 50000 ~ \"Alta\"\n    )\n  ) %>%\n  select(-Renta.media.por.hogar, -Renta.media.por.persona)\n```\n:::\n\n\n\n\n\n## Análisi descriptivo de los datos\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Descriptiva de los datos\nlibrary(DataExplorer)\nlibrary(lubridate)\nlibrary(dplyr)\n\n## Data Manipulation\nlibrary(reshape2)\n\n## Plotting\nlibrary(ggplot2)\n\n## Descripción completa\nDataExplorer::introduce(BCN)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   rows columns discrete_columns continuous_columns all_missing_columns\n1 23334      36               24                 12                   0\n  total_missing_values complete_rows total_observations memory_usage\n1                    0         23334             840024      6078888\n```\n\n\n:::\n\n```{.r .cell-code}\n## Descripción de la bbdd\nplot_intro(BCN)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-1.png){width=672}\n:::\n\n```{.r .cell-code}\n## Descripción de los missings\nplot_missing(BCN)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-2.png){width=672}\n:::\n\n```{.r .cell-code}\n## Descripción de las varaibles categoricas\nplot_bar(BCN)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-5.png){width=672}\n:::\n\n```{.r .cell-code}\n## Descripción variables numéricas\nplot_histogram(BCN)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-6.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_density(BCN)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-7.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_qq(BCN)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-9.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_correlation(BCN)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/descriptiva-R-10.png){width=672}\n:::\n:::\n\n\n\n\n\n# Data Manipulation\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n\nset.seed(1994)\n\nindex <- caret::createDataPartition(BCN$UNITPRICE, p = 0.8, list = FALSE)\nrtrain <- BCN %>% slice(index) %>% na.omit()\nrtest <- BCN %>% slice(-index) %>% na.omit()\n```\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.preprocessing import LabelEncoder\n\n# Crear un LabelEncoder\nle = LabelEncoder()\n\n# Lista de variables a transformar\ncolumns_to_encode = ['HASTERRACE', 'HASLIFT', 'HASAIRCONDITIONING', 'AMENITYID',\n    'HASPARKINGSPACE', 'ISPARKINGSPACEINCLUDEDINPRICE', 'HASNORTHORIENTATION',\n    'HASSOUTHORIENTATION', 'HASEASTORIENTATION', 'HASWESTORIENTATION',\n    'HASBOXROOM', 'HASWARDROBE', 'HASSWIMMINGPOOL', 'HASDOORMAN', 'HASGARDEN',\n    'ISDUPLEX', 'ISSTUDIO', 'ISINTOPFLOOR', 'FLOORCLEAN', 'FLATLOCATIONID',\n    'CADMAXBUILDINGFLOOR', 'CADDWELLINGCOUNT','BUILTTYPEID_1', 'BUILTTYPEID_2', \n    'BUILTTYPEID_3', 'CDIS', 'RENTA']\n\n# Aplicar LabelEncoder a cada columna de la lista\nfor col in columns_to_encode:\n    if col in pyBCN.columns:  # Verificar que la columna existe en el DataFrame\n        pyBCN[col] = le.fit_transform(pyBCN[col].astype(str))  # Convertir a string si no es categórica\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.model_selection import train_test_split\n\n# dividimos la base de datos \nX = pyBCN.drop(columns=[\"RENTA\"])\n\npyX_train, pyX_test, pyy_train, pyy_test = train_test_split(\n    X, pyBCN['RENTA'], test_size = 0.2, random_state = 1994)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.preprocessing import StandardScaler\n\n# Scale dataset\nsc = StandardScaler()\npyX_train = sc.fit_transform(pyX_train)\npyX_test = sc.fit_transform(pyX_test)\n```\n:::\n\n\n\n\n:::\n\n# Árboles de decisión\n\n## Creación del árbol\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rpart)\nlibrary(rpart.plot)\n\nset.seed(1994)\n\narbol <- rpart(RENTA ~ ., data = rtrain)\nsummary(arbol)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nrpart(formula = RENTA ~ ., data = rtrain)\n  n= 18669 \n\n          CP nsplit rel error    xerror        xstd\n1 0.38211183      0 1.0000000 1.0000000 0.008293935\n2 0.06753946      1 0.6178882 0.6178882 0.007426365\n3 0.04447571      2 0.5503487 0.5503487 0.007149373\n4 0.02214609      4 0.4613973 0.4643338 0.006727872\n5 0.01884253      5 0.4392512 0.4425548 0.006607381\n6 0.01186835      6 0.4204087 0.4267711 0.006516230\n7 0.01162364      8 0.3966720 0.4034014 0.006375036\n8 0.01015539     10 0.3734247 0.3792977 0.006221129\n9 0.01000000     12 0.3531139 0.3676740 0.006143722\n\nVariable importance\n                   CDIS DISTANCE_TO_CITY_CENTER    DISTANCE_TO_DIAGONAL \n                     40                      24                      17 \n    CADCONSTRUCTIONYEAR         CONSTRUCTEDAREA               UNITPRICE \n                      8                       3                       3 \n      DISTANCE_TO_METRO              BATHNUMBER              ROOMNUMBER \n                      2                       1                       1 \n\nNode number 1: 18669 observations,    complexity param=0.3821118\n  predicted class=Media  expected loss=0.4377846  P(node) =1\n    class counts:  1941  6232 10496\n   probabilities: 0.104 0.334 0.562 \n  left son=2 (4541 obs) right son=3 (14128 obs)\n  Primary splits:\n      CDIS                    splits as  LRRRRLRRRR, improve=2615.4350, (0 missing)\n      DISTANCE_TO_DIAGONAL    < 1.697581   to the right, improve=1710.4180, (0 missing)\n      HASLIFT                 splits as  LR, improve= 961.7684, (0 missing)\n      DISTANCE_TO_CITY_CENTER < 1.146692   to the left,  improve= 885.2803, (0 missing)\n      CADCONSTRUCTIONYEAR     < 1900.5     to the left,  improve= 800.8061, (0 missing)\n  Surrogate splits:\n      DISTANCE_TO_CITY_CENTER < 1.146692   to the left,  agree=0.853, adj=0.396, (0 split)\n      CADCONSTRUCTIONYEAR     < 1900.5     to the left,  agree=0.823, adj=0.273, (0 split)\n      DISTANCE_TO_DIAGONAL    < 4.28574    to the right, agree=0.775, adj=0.076, (0 split)\n      CONSTRUCTEDAREA         < 46.5       to the left,  agree=0.769, adj=0.052, (0 split)\n      ROOMNUMBER              < 11         to the right, agree=0.757, adj=0.001, (0 split)\n\nNode number 2: 4541 observations,    complexity param=0.02214609\n  predicted class=Baja   expected loss=0.156133  P(node) =0.2432375\n    class counts:     0  3832   709\n   probabilities: 0.000 0.844 0.156 \n  left son=4 (4294 obs) right son=5 (247 obs)\n  Primary splits:\n      DISTANCE_TO_CITY_CENTER < 0.4629643  to the right, improve=263.54560, (0 missing)\n      DISTANCE_TO_DIAGONAL    < 1.293729   to the right, improve= 85.60347, (0 missing)\n      CDIS                    splits as  L----R----, improve= 66.85504, (0 missing)\n      HASLIFT                 splits as  LR, improve= 65.14028, (0 missing)\n      CADCONSTRUCTIONYEAR     < 1950.5     to the left,  improve= 50.10187, (0 missing)\n\nNode number 3: 14128 observations,    complexity param=0.06753946\n  predicted class=Media  expected loss=0.3072622  P(node) =0.7567625\n    class counts:  1941  2400  9787\n   probabilities: 0.137 0.170 0.693 \n  left son=6 (1990 obs) right son=7 (12138 obs)\n  Primary splits:\n      CDIS                 splits as  -RRRL-RRRL, improve=903.3696, (0 missing)\n      DISTANCE_TO_DIAGONAL < 2.370657   to the right, improve=788.5626, (0 missing)\n      CONSTRUCTEDAREA      < 137.5      to the right, improve=434.3222, (0 missing)\n      UNITPRICE            < 2898.227   to the left,  improve=369.9583, (0 missing)\n      BATHNUMBER           < 2.5        to the right, improve=353.8536, (0 missing)\n  Surrogate splits:\n      CONSTRUCTEDAREA   < 223.5      to the right, agree=0.866, adj=0.052, (0 split)\n      BATHNUMBER        < 3.5        to the right, agree=0.864, adj=0.038, (0 split)\n      DISTANCE_TO_METRO < 1.634495   to the right, agree=0.860, adj=0.006, (0 split)\n      ROOMNUMBER        < 6.5        to the right, agree=0.859, adj=0.003, (0 split)\n      UNITPRICE         < 6992.805   to the right, agree=0.859, adj=0.001, (0 split)\n\nNode number 4: 4294 observations,    complexity param=0.01015539\n  predicted class=Baja   expected loss=0.1152771  P(node) =0.230007\n    class counts:     0  3799   495\n   probabilities: 0.000 0.885 0.115 \n  left son=8 (3278 obs) right son=9 (1016 obs)\n  Primary splits:\n      DISTANCE_TO_CITY_CENTER < 3.316192   to the left,  improve=107.18450, (0 missing)\n      CDIS                    splits as  L----R----, improve=107.18450, (0 missing)\n      DISTANCE_TO_DIAGONAL    < 2.818623   to the left,  improve= 91.99937, (0 missing)\n      CADCONSTRUCTIONYEAR     < 1950.5     to the left,  improve= 66.10102, (0 missing)\n      HASLIFT                 splits as  LR, improve= 49.70642, (0 missing)\n  Surrogate splits:\n      DISTANCE_TO_DIAGONAL < 2.826385   to the left,  agree=0.989, adj=0.955, (0 split)\n      CADCONSTRUCTIONYEAR  < 1950.5     to the left,  agree=0.886, adj=0.517, (0 split)\n      UNITPRICE            < 2840.561   to the right, agree=0.876, adj=0.475, (0 split)\n      CADDWELLINGCOUNT     < 30.5       to the left,  agree=0.789, adj=0.106, (0 split)\n      CADMAXBUILDINGFLOOR  < 7.5        to the left,  agree=0.776, adj=0.053, (0 split)\n\nNode number 5: 247 observations\n  predicted class=Media  expected loss=0.1336032  P(node) =0.01323049\n    class counts:     0    33   214\n   probabilities: 0.000 0.134 0.866 \n\nNode number 6: 1990 observations,    complexity param=0.01162364\n  predicted class=Alta   expected loss=0.3613065  P(node) =0.1065938\n    class counts:  1271     0   719\n   probabilities: 0.639 0.000 0.361 \n  left son=12 (1077 obs) right son=13 (913 obs)\n  Primary splits:\n      CONSTRUCTEDAREA      < 119.5      to the right, improve=121.31850, (0 missing)\n      BATHNUMBER           < 2.5        to the right, improve= 87.03903, (0 missing)\n      DISTANCE_TO_DIAGONAL < 0.5534786  to the left,  improve= 85.36516, (0 missing)\n      CDIS                 splits as  ----R----L, improve= 68.18003, (0 missing)\n      UNITPRICE            < 5287.749   to the right, improve= 60.24694, (0 missing)\n  Surrogate splits:\n      ROOMNUMBER                    < 3.5        to the right, agree=0.790, adj=0.542, (0 split)\n      BATHNUMBER                    < 1.5        to the right, agree=0.747, adj=0.448, (0 split)\n      HASTERRACE                    splits as  RL, agree=0.647, adj=0.230, (0 split)\n      HASPARKINGSPACE               splits as  RL, agree=0.641, adj=0.217, (0 split)\n      ISPARKINGSPACEINCLUDEDINPRICE splits as  RL, agree=0.641, adj=0.217, (0 split)\n\nNode number 7: 12138 observations,    complexity param=0.04447571\n  predicted class=Media  expected loss=0.2529247  P(node) =0.6501687\n    class counts:   670  2400  9068\n   probabilities: 0.055 0.198 0.747 \n  left son=14 (2820 obs) right son=15 (9318 obs)\n  Primary splits:\n      DISTANCE_TO_DIAGONAL    < 2.370657   to the right, improve=832.9688, (0 missing)\n      CDIS                    splits as  -RRL--RLL-, improve=615.9082, (0 missing)\n      UNITPRICE               < 2898.227   to the left,  improve=380.3717, (0 missing)\n      DISTANCE_TO_CITY_CENTER < 3.940257   to the right, improve=338.4368, (0 missing)\n      CONSTRUCTEDAREA         < 80.5       to the left,  improve=178.0100, (0 missing)\n  Surrogate splits:\n      DISTANCE_TO_CITY_CENTER < 4.058752   to the right, agree=0.897, adj=0.558, (0 split)\n      CDIS                    splits as  -RRL--LRR-, agree=0.816, adj=0.206, (0 split)\n      UNITPRICE               < 2753.972   to the left,  agree=0.811, adj=0.184, (0 split)\n      DISTANCE_TO_METRO       < 0.7218963  to the right, agree=0.780, adj=0.051, (0 split)\n      CADMAXBUILDINGFLOOR     < 26.5       to the right, agree=0.769, adj=0.005, (0 split)\n\nNode number 8: 3278 observations\n  predicted class=Baja   expected loss=0.05308115  P(node) =0.1755852\n    class counts:     0  3104   174\n   probabilities: 0.000 0.947 0.053 \n\nNode number 9: 1016 observations,    complexity param=0.01015539\n  predicted class=Baja   expected loss=0.3159449  P(node) =0.05442177\n    class counts:     0   695   321\n   probabilities: 0.000 0.684 0.316 \n  left son=18 (712 obs) right son=19 (304 obs)\n  Primary splits:\n      DISTANCE_TO_DIAGONAL    < 3.420441   to the right, improve=181.26100, (0 missing)\n      DISTANCE_TO_CITY_CENTER < 4.8151     to the right, improve=162.58570, (0 missing)\n      UNITPRICE               < 2586.19    to the left,  improve= 62.53053, (0 missing)\n      HASLIFT                 splits as  LR, improve= 54.20484, (0 missing)\n      CONSTRUCTEDAREA         < 74.5       to the left,  improve= 31.09944, (0 missing)\n  Surrogate splits:\n      DISTANCE_TO_CITY_CENTER < 5.091757   to the right, agree=0.958, adj=0.859, (0 split)\n      UNITPRICE               < 3251.667   to the left,  agree=0.775, adj=0.247, (0 split)\n      CADCONSTRUCTIONYEAR     < 1954.5     to the right, agree=0.708, adj=0.023, (0 split)\n      BUILTTYPEID_1           splits as  LR, agree=0.707, adj=0.020, (0 split)\n      DISTANCE_TO_METRO       < 0.02808259 to the right, agree=0.707, adj=0.020, (0 split)\n\nNode number 12: 1077 observations\n  predicted class=Alta   expected loss=0.2005571  P(node) =0.05768922\n    class counts:   861     0   216\n   probabilities: 0.799 0.000 0.201 \n\nNode number 13: 913 observations,    complexity param=0.01162364\n  predicted class=Media  expected loss=0.449069  P(node) =0.0489046\n    class counts:   410     0   503\n   probabilities: 0.449 0.000 0.551 \n  left son=26 (495 obs) right son=27 (418 obs)\n  Primary splits:\n      CDIS                    splits as  ----R----L, improve=47.94928, (0 missing)\n      DISTANCE_TO_DIAGONAL    < 0.5540544  to the left,  improve=44.18423, (0 missing)\n      UNITPRICE               < 5289.352   to the right, improve=37.28880, (0 missing)\n      DISTANCE_TO_METRO       < 0.2951583  to the right, improve=24.68798, (0 missing)\n      DISTANCE_TO_CITY_CENTER < 2.14678    to the left,  improve=21.64891, (0 missing)\n  Surrogate splits:\n      CADDWELLINGCOUNT        < 30.5       to the left,  agree=0.729, adj=0.409, (0 split)\n      DISTANCE_TO_DIAGONAL    < 1.062684   to the right, agree=0.705, adj=0.356, (0 split)\n      UNITPRICE               < 4821.591   to the right, agree=0.677, adj=0.294, (0 split)\n      CADMAXBUILDINGFLOOR     < 8.5        to the left,  agree=0.662, adj=0.261, (0 split)\n      DISTANCE_TO_CITY_CENTER < 3.575557   to the left,  agree=0.623, adj=0.177, (0 split)\n\nNode number 14: 2820 observations,    complexity param=0.04447571\n  predicted class=Baja   expected loss=0.4553191  P(node) =0.1510525\n    class counts:    95  1536  1189\n   probabilities: 0.034 0.545 0.422 \n  left son=28 (2010 obs) right son=29 (810 obs)\n  Primary splits:\n      CDIS                    splits as  -RRL--RLL-, improve=202.04190, (0 missing)\n      DISTANCE_TO_CITY_CENTER < 2.380396   to the left,  improve=170.89780, (0 missing)\n      DISTANCE_TO_DIAGONAL    < 3.446593   to the left,  improve=103.80040, (0 missing)\n      CADCONSTRUCTIONYEAR     < 1971.5     to the left,  improve= 77.57975, (0 missing)\n      CONSTRUCTEDAREA         < 86.5       to the left,  improve= 62.41583, (0 missing)\n  Surrogate splits:\n      DISTANCE_TO_CITY_CENTER < 5.730574   to the left,  agree=0.819, adj=0.370, (0 split)\n      DISTANCE_TO_DIAGONAL    < 3.716013   to the left,  agree=0.759, adj=0.160, (0 split)\n      CONSTRUCTEDAREA         < 130.5      to the left,  agree=0.716, adj=0.012, (0 split)\n      BATHNUMBER              < 2.5        to the left,  agree=0.715, adj=0.006, (0 split)\n      DISTANCE_TO_METRO       < 0.01826087 to the right, agree=0.714, adj=0.005, (0 split)\n\nNode number 15: 9318 observations,    complexity param=0.01186835\n  predicted class=Media  expected loss=0.1544323  P(node) =0.4991162\n    class counts:   575   864  7879\n   probabilities: 0.062 0.093 0.846 \n  left son=30 (523 obs) right son=31 (8795 obs)\n  Primary splits:\n      DISTANCE_TO_CITY_CENTER < 0.871618   to the left,  improve=157.24670, (0 missing)\n      CDIS                    splits as  -RRL--RLL-, improve=145.36290, (0 missing)\n      CADDWELLINGCOUNT        < 167.5      to the right, improve= 73.55115, (0 missing)\n      CONSTRUCTEDAREA         < 135.5      to the right, improve= 56.59289, (0 missing)\n      DISTANCE_TO_DIAGONAL    < 1.820647   to the right, improve= 55.50302, (0 missing)\n  Surrogate splits:\n      BATHNUMBER < 0.5        to the left,  agree=0.944, adj=0.002, (0 split)\n\nNode number 18: 712 observations\n  predicted class=Baja   expected loss=0.1207865  P(node) =0.03813809\n    class counts:     0   626    86\n   probabilities: 0.000 0.879 0.121 \n\nNode number 19: 304 observations\n  predicted class=Media  expected loss=0.2269737  P(node) =0.01628368\n    class counts:     0    69   235\n   probabilities: 0.000 0.227 0.773 \n\nNode number 26: 495 observations\n  predicted class=Alta   expected loss=0.4020202  P(node) =0.02651454\n    class counts:   296     0   199\n   probabilities: 0.598 0.000 0.402 \n\nNode number 27: 418 observations\n  predicted class=Media  expected loss=0.2727273  P(node) =0.02239006\n    class counts:   114     0   304\n   probabilities: 0.273 0.000 0.727 \n\nNode number 28: 2010 observations,    complexity param=0.01884253\n  predicted class=Baja   expected loss=0.3278607  P(node) =0.1076651\n    class counts:    35  1351   624\n   probabilities: 0.017 0.672 0.310 \n  left son=56 (1748 obs) right son=57 (262 obs)\n  Primary splits:\n      DISTANCE_TO_DIAGONAL    < 3.446593   to the left,  improve=135.93570, (0 missing)\n      DISTANCE_TO_CITY_CENTER < 2.380396   to the left,  improve=112.73140, (0 missing)\n      DISTANCE_TO_METRO       < 0.3243732  to the left,  improve= 83.82446, (0 missing)\n      CADCONSTRUCTIONYEAR     < 1967.5     to the left,  improve= 70.86276, (0 missing)\n      CADMAXBUILDINGFLOOR     < 7.5        to the left,  improve= 37.15447, (0 missing)\n  Surrogate splits:\n      DISTANCE_TO_CITY_CENTER < 5.208402   to the left,  agree=0.949, adj=0.611, (0 split)\n      DISTANCE_TO_METRO       < 0.7342067  to the left,  agree=0.904, adj=0.267, (0 split)\n      PARKINGSPACEPRICE       < 28451      to the left,  agree=0.872, adj=0.015, (0 split)\n      CADMAXBUILDINGFLOOR     < 1.5        to the right, agree=0.872, adj=0.015, (0 split)\n\nNode number 29: 810 observations\n  predicted class=Media  expected loss=0.3024691  P(node) =0.04338743\n    class counts:    60   185   565\n   probabilities: 0.074 0.228 0.698 \n\nNode number 30: 523 observations,    complexity param=0.01186835\n  predicted class=Media  expected loss=0.4760994  P(node) =0.02801436\n    class counts:   249     0   274\n   probabilities: 0.476 0.000 0.524 \n  left son=60 (284 obs) right son=61 (239 obs)\n  Primary splits:\n      DISTANCE_TO_DIAGONAL    < 0.990107   to the left,  improve=165.999900, (0 missing)\n      DISTANCE_TO_METRO       < 0.1705538  to the right, improve= 38.560880, (0 missing)\n      DISTANCE_TO_CITY_CENTER < 0.44858    to the right, improve= 36.859370, (0 missing)\n      UNITPRICE               < 4976.906   to the right, improve= 12.669910, (0 missing)\n      CONSTRUCTEDAREA         < 124.5      to the right, improve=  9.569507, (0 missing)\n  Surrogate splits:\n      DISTANCE_TO_METRO       < 0.1699124  to the right, agree=0.744, adj=0.439, (0 split)\n      DISTANCE_TO_CITY_CENTER < 0.4805939  to the right, agree=0.728, adj=0.406, (0 split)\n      UNITPRICE               < 4976.906   to the right, agree=0.642, adj=0.218, (0 split)\n      CADCONSTRUCTIONYEAR     < 1941.5     to the left,  agree=0.587, adj=0.096, (0 split)\n      CADDWELLINGCOUNT        < 24.5       to the left,  agree=0.583, adj=0.088, (0 split)\n\nNode number 31: 8795 observations\n  predicted class=Media  expected loss=0.1353042  P(node) =0.4711018\n    class counts:   326   864  7605\n   probabilities: 0.037 0.098 0.865 \n\nNode number 56: 1748 observations\n  predicted class=Baja   expected loss=0.2580092  P(node) =0.09363115\n    class counts:    35  1297   416\n   probabilities: 0.020 0.742 0.238 \n\nNode number 57: 262 observations\n  predicted class=Media  expected loss=0.2061069  P(node) =0.01403396\n    class counts:     0    54   208\n   probabilities: 0.000 0.206 0.794 \n\nNode number 60: 284 observations\n  predicted class=Alta   expected loss=0.1584507  P(node) =0.01521238\n    class counts:   239     0    45\n   probabilities: 0.842 0.000 0.158 \n\nNode number 61: 239 observations\n  predicted class=Media  expected loss=0.041841  P(node) =0.01280197\n    class counts:    10     0   229\n   probabilities: 0.042 0.000 0.958 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrpart.plot(arbol)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/plot-arbol-r-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Decision Tree Classification\nfrom sklearn.tree import DecisionTreeClassifier\n\nclassifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 1994)\nclf = classifier.fit(pyX_train, pyy_train)\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn import tree\n\ntree.plot_tree(clf)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/plot-arbol-python-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n## Creamos las predicciones\n\n::: panel-tabset\n## R\n\nAplicamos el modelo a nuestros valores de test.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(arbol, rtest[1:10, ])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Alta      Baja      Media\n1     0 0.9469189 0.05308115\n2     0 0.9469189 0.05308115\n3     0 0.9469189 0.05308115\n4     0 0.9469189 0.05308115\n5     0 0.9469189 0.05308115\n6     0 0.1336032 0.86639676\n7     0 0.9469189 0.05308115\n8     0 0.9469189 0.05308115\n9     0 0.9469189 0.05308115\n10    0 0.1336032 0.86639676\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredicciones <- predict(arbol, rtrain, type = \"class\")\ncaret::confusionMatrix(predicciones, as.factor(rtrain$RENTA))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction Alta Baja Media\n     Alta  1396    0   460\n     Baja    35 5027   676\n     Media  510 1205  9360\n\nOverall Statistics\n                                          \n               Accuracy : 0.8454          \n                 95% CI : (0.8401, 0.8506)\n    No Information Rate : 0.5622          \n    P-Value [Acc > NIR] : < 2.2e-16       \n                                          \n                  Kappa : 0.7207          \n                                          \n Mcnemar's Test P-Value : < 2.2e-16       \n\nStatistics by Class:\n\n                     Class: Alta Class: Baja Class: Media\nSensitivity              0.71922      0.8066       0.8918\nSpecificity              0.97250      0.9428       0.7902\nPos Pred Value           0.75216      0.8761       0.8451\nNeg Pred Value           0.96758      0.9068       0.8504\nPrevalence               0.10397      0.3338       0.5622\nDetection Rate           0.07478      0.2693       0.5014\nDetection Prevalence     0.09942      0.3074       0.5932\nBalanced Accuracy        0.84586      0.8747       0.8410\n```\n\n\n:::\n\n```{.r .cell-code}\npredicciones <- predict(arbol, rtest, type = \"class\")\ncaret::confusionMatrix(predicciones, as.factor(rtest$RENTA))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction Alta Baja Media\n     Alta   311    1   148\n     Baja     5 1250   171\n     Media  151  266  2362\n\nOverall Statistics\n                                          \n               Accuracy : 0.8409          \n                 95% CI : (0.8301, 0.8513)\n    No Information Rate : 0.5747          \n    P-Value [Acc > NIR] : < 2.2e-16       \n                                          \n                  Kappa : 0.7099          \n                                          \n Mcnemar's Test P-Value : 3.415e-05       \n\nStatistics by Class:\n\n                     Class: Alta Class: Baja Class: Media\nSensitivity              0.66595      0.8240       0.8810\nSpecificity              0.96451      0.9441       0.7898\nPos Pred Value           0.67609      0.8766       0.8499\nNeg Pred Value           0.96290      0.9176       0.8309\nPrevalence               0.10011      0.3252       0.5747\nDetection Rate           0.06667      0.2680       0.5063\nDetection Prevalence     0.09861      0.3057       0.5957\nBalanced Accuracy        0.81523      0.8840       0.8354\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCM <- caret::confusionMatrix(predicciones, as.factor(rtest$RENTA)); CM <- data.frame(CM$table)\n\ngrafico <- ggplot(CM, aes(Prediction,Reference, fill= Freq)) +\n        geom_tile() + geom_text(aes(label=Freq)) +\n        scale_fill_gradient(low=\"white\", high=\"#009194\") +\n        labs(x = \"Reference\",y = \"Prediction\")\n\nplot(grafico)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/plot-confusionMatrix-decisionTree-r-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\n\n# Prediction\ny_pred = classifier.predict(pyX_test)\n\nresults = pd.DataFrame({\n    'Real': pyy_test,  # Valores reales\n    'Predicho': y_pred  # Valores predichos\n})\n\n# Muestra los primeros 5 registros\nprint(results.head())  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Real  Predicho\n2399      2         2\n18420     0         0\n22515     2         2\n20265     1         1\n10432     1         1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.metrics import classification_report\n\nprint(f'Classification Report: \\n{classification_report(pyy_test, y_pred)}')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClassification Report: \n              precision    recall  f1-score   support\n\n           0       0.85      0.82      0.84       488\n           1       0.92      0.91      0.91      1522\n           2       0.92      0.93      0.92      2657\n\n    accuracy                           0.91      4667\n   macro avg       0.89      0.89      0.89      4667\nweighted avg       0.91      0.91      0.91      4667\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\n\n# Confusion matrix\ncf_matrix = confusion_matrix(pyy_test, y_pred)\nsns.heatmap(cf_matrix, annot=True, fmt='d', cmap='Blues', cbar=False)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/plot-confMatrix-python-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n## Modelo de classificación con cross-evaluación\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Generamos los parámetros de control\ntrControl <- trainControl(method = \"cv\", number = 10, classProbs = TRUE,\n  summaryFunction = multiClassSummary)\n## En este caso, se realiza una cros-validación de 10 etapas\n\n# se fija una semilla aleatoria\nset.seed(1994)\n\n# se entrena el modelo\nmodel <- train(RENTA ~ .,  # . equivale a incluir todas las variables\n               data = rtrain,\n               method = \"rpart\",\n               metric = \"Accuracy\",\n               trControl = trControl)\n\n# Obtenemos los valores del árbol óptimo\nmodel$finalModel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nn= 18669 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n 1) root 18669 8173 Media (0.10396915 0.33381542 0.56221544)  \n   2) DISTANCE_TO_DIAGONAL>=1.697581 9078 3793 Baja (0.02599692 0.58217669 0.39182639)  \n     4) DISTANCE_TO_CITY_CENTER< 1.182486 2168  144 Baja (0.00000000 0.93357934 0.06642066) *\n     5) DISTANCE_TO_CITY_CENTER>=1.182486 6910 3497 Media (0.03415340 0.47192475 0.49392185)  \n      10) DISTANCE_TO_DIAGONAL>=2.350599 4436 1689 Baja (0.02705140 0.61925158 0.35369702) *\n      11) DISTANCE_TO_DIAGONAL< 2.350599 2474  630 Media (0.04688763 0.20776071 0.74535166) *\n   3) DISTANCE_TO_DIAGONAL< 1.697581 9591 2652 Media (0.17777083 0.09873840 0.72349077) *\n```\n\n\n:::\n\n```{.r .cell-code}\n# Generamos el gráfico del árbol\nrpart.plot(model$finalModel)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/decisionsTree-crossvalidation-r-3.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reshape2)\n\n# A continuación generamos un gráfico que nos permite ver la variabilidad de los estadísticos\n# calculados\nggplot(melt(model$resample[,c(2:5, 7:9, 12:13)]), aes(x = variable, y = value, fill=variable)) +\n  geom_boxplot(show.legend=FALSE) +\n  xlab(NULL) + ylab(NULL)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/plot-resultados-crossvalidation-r-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.tree import DecisionTreeClassifier\n\n# Modelo de árbol de decisión\nmodel = DecisionTreeClassifier(random_state=1994)\n\nfrom sklearn.model_selection import cross_val_score\n\n# Realizar validación cruzada con 5 folds\nscores = cross_val_score(model, pyX_train, pyy_train, cv=10, scoring = 'accuracy')  # Métrica: accuracy\n\n# Mostrar resultados\nprint(f\"Accuracy por fold: {scores}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAccuracy por fold: [0.90626674 0.90680236 0.8993037  0.90305303 0.91215854 0.90787359\n 0.89769684 0.90836013 0.914791   0.91425509]\n```\n\n\n:::\n\n```{.python .cell-code}\nprint(f\"Accuracy promedio: {scores.mean():.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAccuracy promedio: 0.9071\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n## Realizando hiperparámetro tunning\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Detectamos cuales son los parámetros del modelo que podemos realizar hiperparámeter tunning\nmodelLookup(\"rpart\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  model parameter                label forReg forClass probModel\n1 rpart        cp Complexity Parameter   TRUE     TRUE      TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Se especifica un rango de valores típicos para el hiperparámetro\ntuneGrid <- expand.grid(cp = seq(0.01,0.05,0.01))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# se entrena el modelo\nset.seed(1994)\n\nmodel <- train(RENTA ~ .,\n               data = rtrain,\n               method = \"rpart\",\n               metric = \"Accuracy\",\n               trControl = trControl,\n               tuneGrid = tuneGrid)\n\n# Obtenemos la información del mejor modelo\nmodel$bestTune\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    cp\n1 0.01\n```\n\n\n:::\n\n```{.r .cell-code}\n# Gráfico del árbol obtenido\nrpart.plot(model$finalModel)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/hyperparam-decisionTree-r-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.model_selection import GridSearchCV\n\n# Definir rejilla de hiperparámetros\nparam_grid = {\n    'max_depth': [None, 5, 10],\n    'min_samples_split': [2, 5, 10],\n    'min_samples_leaf': [1, 2, 4]\n}\n\n# Declaramos el modelo\nmodel = DecisionTreeClassifier(random_state=1994)\n\n# Configurar GridSearch con validación cruzada\ngrid_search = GridSearchCV(estimator=model, param_grid=param_grid, cv=10, scoring='accuracy', n_jobs=-1)\n\n# Ajustar modelo\ngrid_search.fit(pyX_train, pyy_train)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<style>#sk-container-id-1 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-1 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-1 pre {\n  padding: 0;\n}\n\n#sk-container-id-1 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-1 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-1 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-1 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-1 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-1 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-1 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-1 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-1 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-1 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n#sk-container-id-1 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-1 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-1 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-1 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-1 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-1 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-1 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=10, estimator=DecisionTreeClassifier(random_state=1994),\n             n_jobs=-1,\n             param_grid={&#x27;max_depth&#x27;: [None, 5, 10],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [2, 5, 10]},\n             scoring=&#x27;accuracy&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;GridSearchCV<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=10, estimator=DecisionTreeClassifier(random_state=1994),\n             n_jobs=-1,\n             param_grid={&#x27;max_depth&#x27;: [None, 5, 10],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [2, 5, 10]},\n             scoring=&#x27;accuracy&#x27;)</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">best_estimator_: DecisionTreeClassifier</label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(random_state=1994)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(random_state=1994)</pre></div> </div></div></div></div></div></div></div></div></div>\n```\n\n:::\n\n```{.python .cell-code}\n# Mostrar mejores parámetros\nprint(f\"Mejores parámetros: {grid_search.best_params_}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMejores parámetros: {'max_depth': None, 'min_samples_leaf': 1, 'min_samples_split': 2}\n```\n\n\n:::\n\n```{.python .cell-code}\nprint(f\"Mejor accuracy: {grid_search.best_score_:.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMejor accuracy: 0.9071\n```\n\n\n:::\n\n```{.python .cell-code}\n\n\nfrom sklearn import tree\ntree.plot_tree(grid_search.best_estimator_)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/hyperparam-decisionTree-python-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n## Como realizar poda de nuestro árbol\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Con el objetivo de aumentar la generalidad del árbol y facilitar su interpretación, \n# se procede a reducir su tamaño podándolo. Para ello se establece el criterio de \n# que un nodo terminal tiene que tener, como mínimo, 50 observaciones.\nset.seed(1994)\nprunedtree <- rpart(RENTA ~ ., data = rtrain,\n                    cp= 0.01, control = rpart.control(minbucket = 50))\n\nrpart.plot(prunedtree)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/poda-decisionTree-r-3.png){width=672}\n:::\n:::\n\n\n\n\n\n## Python\n\nEn Python, la poda de un árbol de decisión se puede realizar ajustando los hiperparámetros del árbol durante su creación. Estos hiperparámetros controlan el crecimiento del árbol y, por lo tanto, actúan como técnicas de poda preventiva o postpoda.\n\n`scikit-learn` no implementa poda dinámica directa (como ocurre en algunos otros frameworks), pero puedes limitar el tamaño del árbol y evitar sobreajuste mediante los siguientes métodos.\n\n### Poda Preventiva (Pre-pruning)\n\n**Poda preventiva** consiste en detener el crecimiento del árbol antes de que se haga demasiado grande. Esto se logra ajustando hiperparámetros como:\n\n-   `max_depth`: Profundidad máxima del árbol\n-   `min_samples_split`: Número mínimo de muestras necesarias para dividir un nodo.\n-   `min_samples_leaf`: Número mínimo de muestras necesarias en una hoja.\n-   `max_leaf_nodes`: Número máximo de nodos hoja en el árbol.\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Crear un árbol con poda preventiva\nmodel = DecisionTreeClassifier(\n    max_depth=3,              # Limitar la profundidad\n    min_samples_split=10,     # Mínimo 10 muestras para dividir un nodo\n    min_samples_leaf=5,       # Mínimo 5 muestras por hoja\n    random_state=42\n)\n\n# Entrenar el modelo\nmodel.fit(pyX_train, pyy_train)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<style>#sk-container-id-2 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-2 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-2 pre {\n  padding: 0;\n}\n\n#sk-container-id-2 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-2 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-2 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-2 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-2 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-2 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-2 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-2 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-2 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-2 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-2 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-2 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-2 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-2 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-2 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-2 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n#sk-container-id-2 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-2 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-2 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-2 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-2 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-2 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-2 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-2 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-2 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-2 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=3, min_samples_leaf=5, min_samples_split=10,\n                       random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(max_depth=3, min_samples_leaf=5, min_samples_split=10,\n                       random_state=42)</pre></div> </div></div></div></div>\n```\n\n:::\n\n```{.python .cell-code}\n# Evaluar\nprint(f\"Accuracy en entrenamiento: {model.score(pyX_train, pyy_train):.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAccuracy en entrenamiento: 0.7919\n```\n\n\n:::\n\n```{.python .cell-code}\nprint(f\"Accuracy en prueba: {model.score(pyX_test, pyy_test):.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAccuracy en prueba: 0.7932\n```\n\n\n:::\n\n```{.python .cell-code}\n\n# Graficamos el árbol podado\ntree.plot_tree(model)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/podaPreventiva-decisionTree-python-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Poda Posterior (Post-Pruning) con `ccp_alpha`\n\nSe puedes realizar poda posterior usando cost **complexity pruning**. Esto implica ajustar el parámetro `ccp_alpha` (el parámetro de complejidad de coste).\n\nEl árbol generará múltiples subárboles podados para diferentes valores de `ccp_alpha`, y tú puedes elegir el más adecuado evaluando su desempeño.\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport matplotlib.pyplot as plt\n\n# Crear un árbol sin poda\nmodel = DecisionTreeClassifier(random_state=1994)\nmodel.fit(pyX_train, pyy_train)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<style>#sk-container-id-3 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-3 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-3 pre {\n  padding: 0;\n}\n\n#sk-container-id-3 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-3 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-3 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-3 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-3 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-3 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-3 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-3 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-3 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-3 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-3 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-3 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-3 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-3 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n#sk-container-id-3 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-3 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-3 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-3 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-3 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-3 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-3 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-3 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-3 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(random_state=1994)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(random_state=1994)</pre></div> </div></div></div></div>\n```\n\n:::\n\n```{.python .cell-code}\n# Obtener valores de ccp_alpha\npath = model.cost_complexity_pruning_path(pyX_train, pyy_train)\nccp_alphas = path.ccp_alphas\nimpurities = path.impurities\n\n# Entrenar árboles para cada valor de ccp_alpha\nmodels = []\nfor ccp_alpha in ccp_alphas:\n    clf = DecisionTreeClassifier(random_state=42, ccp_alpha=ccp_alpha)\n    clf.fit(pyX_train, pyy_train)\n    models.append(clf)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<style>#sk-container-id-4 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-4 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-4 pre {\n  padding: 0;\n}\n\n#sk-container-id-4 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-4 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-4 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-4 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-4 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-4 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-4 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-4 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-4 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-4 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-4 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-4 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-4 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-4 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-4 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-4 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n#sk-container-id-4 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-4 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-4 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-4 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-4 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-4 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-4 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-4 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-4 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-4 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(ccp_alpha=0.12113075107966081, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" checked><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(ccp_alpha=0.12113075107966081, random_state=42)</pre></div> </div></div></div></div>\n```\n\n:::\n\n```{.python .cell-code}\n# Evaluar desempeño\ntrain_scores = [clf.score(pyX_train, pyy_train) for clf in models]\ntest_scores = [clf.score(pyX_test, pyy_test) for clf in models]\n\n# Graficar resultados\nplt.figure(figsize=(8, 6))\nplt.plot(ccp_alphas, train_scores, marker='o', label=\"Train Accuracy\", drawstyle=\"steps-post\")\nplt.plot(ccp_alphas, test_scores, marker='o', label=\"Test Accuracy\", drawstyle=\"steps-post\")\nplt.xlabel(\"ccp_alpha\")\nplt.ylabel(\"Accuracy\")\nplt.title(\"Accuracy vs ccp_alpha\")\nplt.legend()\nplt.grid()\nplt.show()\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/PostPruning-decisionTree-python-3.png){width=768}\n:::\n:::\n\n\n\n\n:::\n\n# Random Forest\n\n## Aplicación del modelo\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Random Forest \nlibrary(randomForest)\n## devtools::install_github('araastat/reprtree') # Se instala 1 vez para poder printar graficos\nlibrary(reprtree)\n\nset.seed(1994)\narbol_rf <- randomForest(as.factor(RENTA) ~ .,  data = rtrain, ntree = 25)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# se observa el árbol número 20\ntree20 <- getTree(arbol_rf, 20, labelVar = TRUE)\nhead(tree20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  left daughter right daughter               split var split point status\n1             2              3         CONSTRUCTEDAREA  74.5000000      1\n2             4              5       DISTANCE_TO_METRO   0.7023313      1\n3             6              7              BATHNUMBER   2.5000000      1\n4             8              9             HASWARDROBE   1.5000000      1\n5            10             11       DISTANCE_TO_METRO   1.6344953      1\n6            12             13 DISTANCE_TO_CITY_CENTER   1.1452018      1\n  prediction\n1       <NA>\n2       <NA>\n3       <NA>\n4       <NA>\n5       <NA>\n6       <NA>\n```\n\n\n:::\n\n```{.r .cell-code}\n## Sin embargo, el método por el que se representa gráficamente no es muy claro y\n## puede llevar a confusión o dificultar la interpretación del árbol. \n## Si se desea estudiar el árbol, hasta un cierto nivel, se puede incluir el argumento depth.\n## El árbol, ahora con una profundidad de 5 ramas.\nplot.getTree(arbol_rf, k = 20, depth = 5)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/observar-arbol-r-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(vip)\nvip(arbol_rf)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/importance-matrix-r-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.ensemble import RandomForestClassifier\n\nclf = RandomForestClassifier()\nclf.fit(pyX_train, pyy_train)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<style>#sk-container-id-5 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-5 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-5 pre {\n  padding: 0;\n}\n\n#sk-container-id-5 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-5 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-5 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-5 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-5 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-5 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-5 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-5 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-5 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-5 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-5 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-5 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-5 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-5 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-5 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-5 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n#sk-container-id-5 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-5 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-5 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-5 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-5 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-5 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-5 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-5 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-5 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-5 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" checked><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier()</pre></div> </div></div></div></div>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nresults = pd.DataFrame(clf.feature_importances_, index=pyBCN.columns[:-1]).sort_values(by=0, ascending=False)\n\n# Crear gráfico de barras horizontales\nplt.figure(figsize=(10, 8))\nplt.barh(results.index, results[0], color='skyblue')\n\n# Añadir etiquetas y título\nplt.xlabel('Importancia')\nplt.ylabel('Características')\nplt.title('Importancia de las Características')\nplt.grid(axis='x', linestyle='--', alpha=0.7)\nplt.show()\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/importance-matrix-python-1.png){width=960}\n:::\n:::\n\n\n\n\n:::\n\n## Hiperparameter tunning de Random Forest\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identificamos los parámetros que podemos tunnerar\nmodelLookup(\"rf\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  model parameter                         label forReg forClass probModel\n1    rf      mtry #Randomly Selected Predictors   TRUE     TRUE      TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Se especifica un rango de valores posibles de mtry\ntuneGrid <- expand.grid(mtry = c(1, 2, 5, 10))\ntuneGrid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  mtry\n1    1\n2    2\n3    5\n4   10\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# se fija la semilla aleatoria\nset.seed(1994)\n\n# se entrena el modelo\nmodel <- train(RENTA ~ ., data = rtrain, \n               ntree = 20,\n               method = \"rf\", metric = \"Accuracy\",\n               tuneGrid = tuneGrid,\n               trControl = trainControl(classProbs = TRUE))\n\n# Visualizamos los hiperparámetros obtenidos \nmodel$results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  mtry  Accuracy     Kappa  AccuracySD     KappaSD\n1    1 0.7114013 0.4050249 0.021913133 0.053223045\n2    2 0.8424843 0.7083545 0.005692328 0.011410794\n3    5 0.9015691 0.8223990 0.003130659 0.006087154\n4   10 0.9143875 0.8460688 0.002978894 0.005415628\n```\n\n\n:::\n:::\n\n\n\n\n\n## Python\n\n### Ajuste de hiperparámetros con `GridSearchCV`\n\nEl `GridSearchCV` realiza una búsqueda exhaustiva sobre un conjunto de parámetros especificados. Probará todas las combinaciones posibles de hiperparámetros.\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV, RandomizedSearchCV\n\n# Definir los parámetros para la búsqueda\nparam_dist = {\n    'n_estimators': [150, 200],        # Número de árboles en el bosque\n    'max_depth': [None, 10, 20],            # Profundidad máxima del árbol\n    'min_samples_split': [2, 5, 10],            # Número mínimo de muestras para dividir un nodo\n    'min_samples_leaf': [1, 2, 4],               # Número mínimo de muestras en una hoja\n    'max_features': ['auto'],      # Número de características a considerar para dividir un nodo\n    'bootstrap': [True]                      # Si usar bootstrap para los árboles\n}\n\n# Crear el modelo RandomForest\nrf = RandomForestClassifier(random_state = 1994)\n\n# Usar GridSearchCV para encontrar el mejor conjunto de parámetros\ngrid_search = GridSearchCV(estimator = rf, param_grid = param_grid, cv = 10, n_jobs = -1, verbose = 0)\n\n# Ajustar el modelo con los datos de entrenamiento\ngrid_search.fit(pyX_train, pyy_train)\n\n# Mostrar los mejores parámetros encontrados\nprint(\"Mejores parámetros encontrados:\", grid_search.best_params_)\n\ntree.plot_tree(grid_search.best_estimator_)\n```\n:::\n\n\n\n\n\n### Ajuste de Hiperparámetros con `RandomizedSearchCV`\n\n`RandomizedSearchCV` es una técnica más eficiente que `GridSearchCV`, ya que no prueba todas las combinaciones posibles, sino un número limitado de combinaciones aleatorias dentro de un rango definido. Esto es útil si el espacio de búsqueda es grande y quieres evitar un tiempo de cómputo muy largo.\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Definir los parámetros para la búsqueda aleatoria\nparam_dist = {\n    'n_estimators': [150, 200],        # Número de árboles en el bosque\n    'max_depth': [None, 10, 20],            # Profundidad máxima del árbol\n    'min_samples_split': [2, 5, 10],            # Número mínimo de muestras para dividir un nodo\n    'min_samples_leaf': [1, 2, 4],               # Número mínimo de muestras en una hoja\n    'max_features': ['auto'],      # Número de características a considerar para dividir un nodo\n    'bootstrap': [True]                      # Si usar bootstrap para los árboles\n}\n\n# Usar RandomizedSearchCV para búsqueda aleatoria\nrandom_search = RandomizedSearchCV(estimator=rf, param_distributions=param_dist, \n                                   n_iter=50, cv=10, n_jobs=-1, random_state=1994)\n\n# Ajustar el modelo con los datos de entrenamiento\nrandom_search.fit(X_train, y_train)\n\n# Mostrar los mejores parámetros encontrados\nprint(\"Mejores parámetros encontrados:\", random_search.best_params_)\n\ntree.plot_tree(random_search.best_estimator_)\n```\n:::\n\n\n\n\n:::\n\n## Predicciones del algoritmo\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprediccion <- predict(arbol_rf, rtrain, type = \"class\")\ncaret::confusionMatrix(prediccion, as.factor(rtrain$RENTA))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  Alta  Baja Media\n     Alta   1931     0     3\n     Baja      0  6211     7\n     Media    10    21 10486\n\nOverall Statistics\n                                         \n               Accuracy : 0.9978         \n                 95% CI : (0.997, 0.9984)\n    No Information Rate : 0.5622         \n    P-Value [Acc > NIR] : < 2.2e-16      \n                                         \n                  Kappa : 0.9961         \n                                         \n Mcnemar's Test P-Value : NA             \n\nStatistics by Class:\n\n                     Class: Alta Class: Baja Class: Media\nSensitivity               0.9948      0.9966       0.9990\nSpecificity               0.9998      0.9994       0.9962\nPos Pred Value            0.9984      0.9989       0.9971\nNeg Pred Value            0.9994      0.9983       0.9988\nPrevalence                0.1040      0.3338       0.5622\nDetection Rate            0.1034      0.3327       0.5617\nDetection Prevalence      0.1036      0.3331       0.5633\nBalanced Accuracy         0.9973      0.9980       0.9976\n```\n\n\n:::\n\n```{.r .cell-code}\n# Realizamos las predicciones de este ultimo arbol para la predicción de test\n## Si no decimos nada en type (type = prob), nos devolvera la probabilidad de \n## pertenecer a cada clase. \nprediccion <- predict(arbol_rf, rtest, type = \"class\")\n## Para ver la performance, realizaremos la matriz de confusión \ncaret::confusionMatrix(prediccion, as.factor(rtest$RENTA))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction Alta Baja Media\n     Alta   344    1    52\n     Baja     1 1382    76\n     Media  122  134  2553\n\nOverall Statistics\n                                        \n               Accuracy : 0.9173        \n                 95% CI : (0.909, 0.925)\n    No Information Rate : 0.5747        \n    P-Value [Acc > NIR] : < 2.2e-16     \n                                        \n                  Kappa : 0.8478        \n                                        \n Mcnemar's Test P-Value : 1.382e-09     \n\nStatistics by Class:\n\n                     Class: Alta Class: Baja Class: Media\nSensitivity              0.73662      0.9110       0.9523\nSpecificity              0.98737      0.9755       0.8710\nPos Pred Value           0.86650      0.9472       0.9089\nNeg Pred Value           0.97118      0.9579       0.9310\nPrevalence               0.10011      0.3252       0.5747\nDetection Rate           0.07374      0.2962       0.5473\nDetection Prevalence     0.08510      0.3128       0.6021\nBalanced Accuracy        0.86200      0.9433       0.9116\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCM <- caret::confusionMatrix(prediccion, as.factor(rtest$RENTA)); CM <- data.frame(CM$table)\n\ngrafico <- ggplot(CM, aes(Prediction,Reference, fill= Freq)) +\n        geom_tile() + geom_text(aes(label=Freq)) +\n        scale_fill_gradient(low=\"white\", high=\"#009194\") +\n        labs(x = \"Reference\",y = \"Prediction\")\n\nplot(grafico)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/plot-confusionMatrix-RF-r-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\npreds = clf.predict(pyX_test)\nprint(f'Classification Report: \\n{classification_report(pyy_test, preds)}')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClassification Report: \n              precision    recall  f1-score   support\n\n           0       0.90      0.77      0.83       488\n           1       0.95      0.90      0.93      1522\n           2       0.91      0.96      0.93      2657\n\n    accuracy                           0.92      4667\n   macro avg       0.92      0.88      0.90      4667\nweighted avg       0.92      0.92      0.92      4667\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\n# Confusion matrix\ncf_matrix = confusion_matrix(pyy_test, preds)\nsns.heatmap(cf_matrix, annot=True, fmt='d', cmap='Blues', cbar=False)\n```\n\n::: {.cell-output-display}\n![](DecisionsTree_RandomForest_XGBoost_files/figure-html/plot-confusionMatrix-RF-python-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n# eXtrem Gradient Boosting (XGBoost)\n\n## Aplicamos el algoritmo con cross-validation e hiperparameter tunning\n\n::: panel-tabset\n\n## R\n\nPara aplicar los modelos de XGBoost es necesario pasar los datos categoricos en dummies. Una variable *dummy* (también conocida como cualitativa o binaria) es aquella que toma el valor 1 o 0 para indicar la presencia o ausencia de una cierta característica o condición. \n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\nSi quisieramos hacerlo en cross validación hariamos lo siguiente:\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n:::\n\n## Predicciones\n\n::: panel-tabset\n## R\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Python\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n:::\n",
    "supporting": [
      "DecisionsTree_RandomForest_XGBoost_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}